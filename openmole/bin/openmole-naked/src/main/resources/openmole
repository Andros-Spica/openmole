#!/bin/bash

CURDIR=$PWD

#REALPATH=`readlink -f $0`
#LOCATION=`dirname "$REALPATH"`

#readlink -f does not work on mac, use alternate script
TARGET_FILE=$0

cd `dirname $TARGET_FILE`
TARGET_FILE=`basename $TARGET_FILE`

# Iterate down a (possible) chain of symlinks
while [ -L "$TARGET_FILE" ]
do
    TARGET_FILE=`readlink $TARGET_FILE`
    cd `dirname $TARGET_FILE`
    TARGET_FILE=`basename $TARGET_FILE`
done

REALPATH=$TARGET_FILE
#end of readlink -f

LOCATION=$( cd $(dirname $REALPATH) ; pwd -P )
cd "$CURDIR"

MEM=${OPENMOLE_MEMORY:-"2G"}

FLAG=""

JAVAVERSION=`java -version 2>&1`

JVMFLAVOR=`echo "$JAVAVERSION" | tail -1`
case "$JVMFLAVOR" in
  *64-Bit*) FLAG="-XX:+UseCompressedOops";;
esac

JVMVERSION=`echo "$JAVAVERSION" | grep version | rev | cut -d' ' -f1 | rev`
case "$JVMVERSION" in
  *1\.6\.*) echo "Your java version is too old"; exit 1;;
  *1\.7\.*) FLAG="$FLAG -XX:MaxPermSize=128M";;
esac

(nohup sh $LOCATION/dbserver/bin/openmole-dbserver >/dev/null &) 2>/dev/null

ARGS=()
while [[ $# -gt 0 ]]; do
  case "$1" in
    --) ARGS+=("$@"); break ;;
    --mem) shift; MEM=$1 ;;
    *) ARGS+=("$1") ;;
  esac
  shift
done

SCRIPT_ARGS=()

# Try to increase the max number of opened files
if [[ `ulimit -S -n` < 4096 ]]; then ulimit -S -n 4096 2>/dev/null; fi

function run {
  mkdir -p "$HOME/.openmole/.tmp/"
  CONFIGDIR=$HOME/.openmole/.tmp/`date +%s`_$RANDOM

  java -Xss2M -Dfile.encoding=UTF-8 -Djava.security.egd=file:/dev/./urandom -Dosgi.locking=none -Dopenmole.location="${LOCATION}" -Dosgi.classloader.singleThreadLoads=true  -Dosgi.configuration.area="${CONFIGDIR}" -Xmx${MEM} $FLAG \
     -XX:+UseG1GC -XX:CICompilerCount=2 -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -XX:G1ConcRefinementThreads=2 \
     -cp "${LOCATION}/launcher/*" org.openmole.launcher.Launcher  --plugins "${LOCATION}/plugins/" --priority "logging" --run org.openmole.ui.Application --osgi-directory "${CONFIGDIR}" -- \
     "${ARGS[@]}" "${SCRIPT_ARGS[@]}"

  RET=$?
  rm -rf "${CONFIGDIR}"
}

run
while [[ $RET -eq 254 ]]; do
 SCRIPT_ARGS=("--no-browser")
 run
done

exit $RET
