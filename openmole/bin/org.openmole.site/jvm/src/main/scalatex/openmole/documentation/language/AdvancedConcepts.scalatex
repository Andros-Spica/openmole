@import org.openmole.site.stylesheet._
@import org.openmole.site.Resource._
@import org.openmole.site._
@import org.openmole.site.tools._
@import org.openmole.site.Environment._


@h1{Advanced concepts}
OpenMOLE has a lot of handy features that allows the familiar user to tune the workflow of execution into much more details
that previously described in the @a("Model", href:=DocumentationPages.model.file) and @a("Method",
href:=DocumentationPages.model.file) sections.

We present here the relevant elements of the OpenMOLE framework roughly divided into the following sections:
@br@br

@b{Table of contents}


@sect{Sampling and exploring Files}

    @ul
        @li
            @a("Advanced Samplings", href := DocumentationPages.advancedSampling.file),
        @li
            @a("Sampling files and lines into files ", href := DocumentationPages.fileExploration.file)


@sect{OpenMOLE language and concepts : Technical Documentation}
    Fine-tune  your workflow using the elements of the OpenMOLE language :
    @br
    @ul
        @li
            @a("Transitions", href := DocumentationPages.transition.file),
        @li
            @a("Hook", href := DocumentationPages.hook.file),
        @li
            @a("Source", href := DocumentationPages.source.file),




@sect{Development Documentation}

    @b{Plugin development}
    @br
    Develop your own plugin to have full control over your code - OpenMOLE integration: @a("Plugin Page", href := DocumentationPages.plugin.file),
    @br
    @br
    @b{Server Version and REST API }
    @br
    Command your OpenMOLE server from within your own app: @a("Web server and REST API", href := DocumentationPages.webserver.file),



