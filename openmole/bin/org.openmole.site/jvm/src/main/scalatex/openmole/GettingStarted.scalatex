@import org.openmole.site._
@import org.openmole.site.tools._
@import org.openmole.site.stylesheet._
@import DocumentationPages._


@figure
 @img(src := Resource.img.mole.openmoleTransp.file, center(30))


@SideMenu.more.right(320)

@def tasks = """
  // Define the variables that are transmitted between the tasks
  val i = Val[Double]
  val res = Val[Double]

  // Define the model, here it is a simple task executing "res = i * 2", but it can be your model
  val model =
    ScalaTask("val res = i * 2") set (
      inputs += i,
      outputs += (i, res)
    )"""

@def localScript = s"""
$tasks

  // Define the execution environment, here it is a local execution environment with 4 threads but
  // it could be a remote cluster or a grid. The exploration will work the same way whatever the environment
  // and no installation step is required on the execution environment.
  val env = LocalEnvironment(4)
  """




@h1{Getting started with OpenMOLE}

@sect{The big picture}
    When you build a model, you need to understand and/or optimize some parameters and to understand their effect on the dynamics of your model. OpenMOLE has been built for that!
    @break
    First, you @aa("embed your model", href:= DocumentationPages.model.file) in OpenMOLE (5 minutes),
    @br
    Then, you pick one of the distributed @aa("calibration genetic algorithms", href:=DocumentationPages.calibration.file) provided by OpenMOLE (5 minutes) and
     @br
     Finally, you launch the model exploration on a @aa("distributed execution environment", href:=DocumentationPages.environment.file) with thousands of machines (1 minute once authentication is set up). To summarize, you can design large scale model exploration reusing legacy code and advanced numeric methods in approximately 10 minutes.

@sect{Try it !}
    You can try OpenMOLE online using the @aa("OpenMOLEÂ demonstration site", href := "http://demo.openmole.org").

@sect{Install it !}
    OpenMOLE requires that Java version 8 or above is set as the default java on your computer. To make sure of that you can check our @a("FAQ", href := Pages.faq.file). Then just extract the archive, available HERE TODO pointer vers archive locale , somewhere and you're done! OpenMOLE is installed and works out of the box!

    Once installed you can launch OpenMOLE by executing the @i{openmole} file in the installation directory (it is called @i{openmole.bat} for windozers). It will bring up the OpenMOLE @aa("application", href := application.file) that runs in your web browser (OpenMOLE supports Firefox and Chrome).

@sect{Your first exploration}
    Let's explore one variable, multiply it by 2 and then displays each result. The computation is executed in a multi-threaded environment on the local machine.

    In the OpenMOLE interface, first create a file named @i{example.oms} @("(the file extension matters")). Open it and write the following:

      @br @hl.openmole(s"""
      $localScript
      // Define the design of experiment
      DirectSampling(
        evaluation = model on env hook ToStringHook(),
        sampling = i in (0.0 to 100.0 by 1.0)
      )""", name = "first script")

  @p You can run it by clicking on the execution button (see the @aa("GUI guide", href:=DocumentationPages.gui.file))
   .

  @break To distribute the exact same execution to a remote cluster, just switch the environment definition. The only configuration step required for this to work is to have an account on the cluster and to provide your authentication to OpenMOLE.
  Configuring authentications is explained in the section dedicated to each @aa("environment", href := environment.file).

  @br @hl.openmole(s"""
  val env = SLURMEnvironment("myLogin", "cluster.iscpif.fr")

  DirectSampling(
    evaluation = model on env hook ToStringHook() on env,
    sampling = i in (0.0 to 100.0 by 1.0)
  )""", header = tasks, name = "first delegation")
@br


@sect{Unleash the power of the MOLE}
  This was just a tiny bit of what OpenMOLE can achieve! Now you might want to discover how to:
  @ul
    @li{include your own code/program: look at the @aa("Model section", href := model.file),}
    @li{define your environment: look at the @aa("environment section", href := environment.file)}
    @li{describe your design of experiments: look at the @aa("workflow and sampling documentation", href := DocumentationPages.advancedConcepts.file).}

@sect{Get help}
  To get help you are more than welcome to contact the OpenMOLE user mailing list. To do so, you should @aa("subscribe here", href := shared.link.mailingList), and then you can post your question to the list users 'at' list.openmole.org. We're also present on the @b{#openmole} channel of the @a("ISC-PIF's RocketChat", href := shared.link.chat).
