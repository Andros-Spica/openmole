
@import org.openmole.site._

@sect{Compile OpenMOLE}
  This section explains how to compile OpenMOLEÂ from its sources and how to modify the sources. The source code repository can be found @a("here", href := "https://github.com/openmole/openmole").
  @sect{Get the sources}
    OpenMOLE's source code is versioned under @a("git", href :=  "https://en.wikipedia.org/wiki/Git_%28software%29"). You can get the sources as follows:
    @br @hl.highlight("""git clone git@github.com:openmole/openmole.git""", "plain")

    @p The current development versions stands in the master branch.
  @sect{Compile}
    In order to compile OpenMOLE, you should have @a("SBT", href := "http://www.scala-sbt.org/") and a JDK of version 7 or greater (we strongly recommend the use of the OpenJDK as its corresponding Runtime Environment embeds all the tools required by OpenMOLE). Here are the steps to compile OpenMOLE from a fresh clone:
    @br @hl.highlight("""
    cd libraries
    sbt install
    cd ../openmole
    sbt assemble""", "plain")
    @p You can now find the application in bin/openmole/target/assemble/.
    @p To compile offline (plain / train...) you should use: @hl.highlight("""set offline in Global := true""", "plain") when in the sbt shell, or start sbt with the @i{-offline} option.
  @sect{Develop}
    The OpenMOLE development team generally uses the community version of @a("IntelliJ", href := "http://www.jetbrains.com/idea/").
    Once deployed you should install the SBT and Scala plugins. You can then create an IntelliJ project containing the
    OpenMOLE's folder hierarchy by clicking on the "Import Project" button in IntelliJ. Browse to the folder
    @i{openmole/openmole} and click import.
  @sect{Create a standalone archive}
    You can create a standalone archive of your fresh OpenMOLE build and ship it around by using the task @i{openmole:tar}:
    @br @hl.highlight("""sbt openmole:tar""", "plain")
    @p You will find the resulting archive in @i{bin/openmole/target/openmole.tar.gz}.
  @sect{Publish the bundles}
    @hl.highlight("""
    cd libraries
    sbt install-remote
    cd ../openmole
    sbt install-remote""", "plain")
  @sect{Build the web site}
    The source code of the website and the OpenMOLE's documentation are hosted along in the code repository. You might spot a typo/incorrect spelling/grammar mistake/bad wording or simply want to improve a part of the documentation you think is unclear.
    If so, you're more than welcome to correct our mistakes and improve the documentation. To check your changes before sending us a Pull Request, here is how to build a local copy of the website/documentation.

    @hl.highlight("""
    cd openmole
    sbt "project site" assemble
    cd bin/site/target/assemble
    ./site /path/of/the/site
    """, "plain")

    @p The site will be generated in the target directory passed as parameter to @i{./site}.

    @p Optionally you can use @hl.highlight("./site /path/of/the/site -nc", "plain") in order to disable the tests of the scripts, which is (really) time-consuming.