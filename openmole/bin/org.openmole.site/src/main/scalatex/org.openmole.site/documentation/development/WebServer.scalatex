
@import org.openmole.site.Objects._

@sect{Web Server}
  OpenMOLE ships with a web server providing a REST API to @b{start} workflows, @b{manage} their execution and
  @b{retrieve} their output data. To start the OpenMOLE web server, run the command: "openmole -ws" in your favourite
  console.

  @p The web server can be accessed from your browser when pointing to
  @a("http://localhost:8080", href := "http://localhost:8080"). Replace @i{localhost} with the remote machine's hostname
  or IP address if the web server is not running on your local system.

  @sect{API Reference}

    @p The API of the web server is as such:
    @br @b{GET}:
    @ul
      @li{@b{createMole} - return the webpage form for creating a new mole}
      @li{@b{execs} – return the loaded mole executions}
      @li{@b{execs/:id} – return the stats of the mole execution identified by @b{id}}
      @li{@b{start/:id} – start the mole execution identified by @b{id}}
      @li{@b{remove/:id} – purge the execution identified by @b{id} and any stored data from the database}
      @li{@b{data/:id/data.tar} – retrieve the TAR archive containing the results of the execution identified by @b{id}}

    @br @b{POST}:
    @ul
      @li{@b{createMole} – used to upload new @i{Moles} to the server. It has the following parameters:
        @ul
          @li{@b{file} – the mole file. must be a @hl.openmoleNoTest("PartialMoleExecution") serialized to XML.}
          @li{@b{csv} – a CSV file containing data bindings for free @i{Vals} in your @i{Mole} execution}
          @li{@b{encapsulate} – pass the value @b{“on”} for the server to create a special working directory for your Mole
          execution. You can retrieve the working directory as a tar file from @b{GET data/:id/data.tar} upon completion
          of the Mole.}
          @li{@b{name} – allows you to name a @hl.openmoleNoTest("PartialMoleExecution") for reuse purposes.}
      }

  @sect{RESTful APIs 101}

    @p The API is used like other RESTful APIs. When something like @i{createMole} is written in the API, it suggests a
    GET or POST request to "http://<serverAddresshere>/createMole".

    @p Requests' results can be returned as JSON strings instead of the HTTP format. To do so, prepend /json/ to the API
    calls (except in the case of @b{data/:id/data.tar} that only returns data as a TAR archive).